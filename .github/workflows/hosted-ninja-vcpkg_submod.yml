# Copyright (c) 2021 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
#
# The peculiarity of this workflow is that assumes vcpkg stored as a submodule of this repository.
# This workflow does the following:
# - Restores vcpkg artifacts from cache.
# - Sets up vcpkg if needed, then run CMake with CMakePreset.json using a configuration
#   that leverages the vcpkg's toolchain file. This will automatically run vcpkg to install dependencies
#   described by the vcpkg.json manifest file. It will be a no-op if those are restored from cache.
# - Finally builds the sources with Ninja.
name: hosted-ninja-vcpkg_submod-autocache
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Install glfw dependencies
        run: |
          sudo apt-get update
          sudo apt install xorg-dev
        shell: bash
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Set up cache
        id: cache-cpm
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/external
          key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
          restore-keys: |
            ${{ runner.os }}-cpm-

      - uses: ilammy/msvc-dev-cmd@v1  
        with:
          arch: 'x64'
      - name: 'Configure and build on Windows'
        uses: lukka/run-cmake@v10
        id: runcmake-windows
        with:
          configurePreset: 'vc++'
          buildPreset: 'x64-release'
          testPreset: 'x64-release'
        if: ${{ matrix.os == 'windows-latest' }}

      - name: 'Configure and build on Linux'
        uses: lukka/run-cmake@v10
        id: runcmake-windows
        with:
          configurePreset: 'gcc10'
          buildPreset: 'gcc10-release'
          testPreset: 'gcc10-release'
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: 'Configure and build on Mac'
        uses: lukka/run-cmake@v10
        id: runcmake-windows
        with:
          configurePreset: 'clang'
          buildPreset: 'clang-release'
          testPreset: 'clang-release'
        if: ${{ matrix.os == 'macos-latest' }}
